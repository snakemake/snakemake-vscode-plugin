{
  "name": "Snakemake",
  "scopeName": "source.python.snakemake",
  "fileTypes": [
    "Snakefile",
    "smk"
  ],
  "patterns": [
    {
      "include": "#configs"
    },
    {
      "include": "#rules"
    },
    {
      "include": "#ruleparams"
    },
    {
      "include": "#functions"
    },
    {
      "include": "source.python"
    }
  ],
  "repository": {
    "configs": {
      "match": "(?x)\n  ^\\s* # Leading whitespace\n  (configfile|envvars|module|scattergather|include|localrules|onerror|onstart|onsuccess|ruleorder|snakefile|workdir|pepfile|pepschema) # Keywords\n  : # Ending in colon\n",
      "captures": {
        "1": {
          "name": "keyword.control.snakemake.config"
        }
      }
    },
    "rules": {
      "match": "(?x)\n  ^\\s* # Leading whitespace\n  (checkpoint|rule|subworkflow) # Keywords\n  (?:\\s+(\\w+))? # Optional rule name\n  : # Ending in colon\n",
      "captures": {
        "1": {
          "name": "keyword.control.snakemake"
        },
        "2": {
          "name": "entity.name.function.snakemake.rule"
        }
      }
    },
    "ruleparams": {
      "match": "(?x)\n  ^\\s* # Leading whitespace\n  (benchmark|conda|pepfile|pepschema|container|shellcmd|name|norun|conda_env|container_img|containerized|is_containerized|env_modules|shadow_depth|docstring|notebook|template_engine|cache|path_modifier|handover|default_target|localrule|cwl|group|input|log|message|notebook|output|params|priority|resources|run|script|shadow|shell|singularity|threads|version|wildcard_constraints|wrapper|default_target|template_engine|handover) # Keywords\n  : # Ending in colon\n",
      "captures": {
        "1": {
          "name": "keyword.control.snakemake.ruleparam"
        }
      }
    },
    "functions": {
      "match": "\\b(ancient|directory|expand|pipe|protected|temp|touch|unpack|report)\\b",
      "captures": {
        "1": {
          "name": "support.function.builtin.snakemake"
        }
      }
    }
  }
}
